{
	USHORT us,
	us = 280_us,

	CLASS clase {
		LONG largo,
		largo = 1000099_l,
		VOID func(LONG l) {
			l += 100000_l,
		},
	},

	CLASS clase2 {
		DOUBLE dob1; dob2,
		dob1 = 4.5D-1,
		dob2 = 0.6d-2,
		VOID func2(),
		clase,
	},

	clase2 objeto1; objeto2,
	objeto1.largo = 29999_l,
	objeto2.func(200000_l),

	IMPL FOR clase2: {
		VOID func2() {
			PRINT #cadena de prueba# ,
		}, 
	},
	** comentario de prueba 
	DOUBLE variable_doble,

	VOID prueba() {
		LONG variable_doble,
		variable_doble = 5000_l,
	},
	
	LONG aux, 
	aux = 29999_l,

	USHORT corto,
	corto = 50_us,
	corto += 1000_us,

	IF (corto > 1000_us)
		PRINT # mensaje uno #,
	ELSE	
		PRINT # mensaje uno #,
	END_IF,

	IF (aux < 40000_l)
		PRINT # es menor a cuarenta mil #,
	ELSE
		PRINT # es mayor a cuarenta mil  #,
	END_IF,

	VOID prueba2() {
		objeto1.largo = 50000_l,
	},

	CLASS ca {
		USHORT a,
		VOID m() {
			PRINT # estoy en m #,
		},
	},

	CLASS cb {
		DOUBLE b,
		DOUBLE c,
		VOID n() {
			PRINT # estoy en n #,
		},
		ca,
	},	

	ca a1; a2,
	cb b1; b2; b3,

	a1.a = 3_us,
	b1.b = 1.2,
	b2.a = a1.a,
	b2.a = 5_us,
	b1.m(),
	b1.n(),
	a2.m(),

	VOID asigna_valor(LONG formal) {
		formal = 60000_l,
	},

	LONG real, 
	real = 100_l,
	asigna_valor(real),

	IF (real == 60000_l) 
		PRINT # esta bien # ,
	ELSE 
		PRINT # esta mal #,
	END_IF,

	VOID main(){
		LONG aux,
		DOUBLE aux_2,
		aux_2 = 0.5d-2,
	},

	VOID funcion_main() {
		DOUBLE d,
		USHORT us,
	},

	funcion_main(),

	

	USHORT xus,
	xus = 100_us,
	LONG xl,
	xl = 10000_l,
	DOUBLE xd,
	xd = 1000000.0,

	xl = xus + 10000_l,
	
}
